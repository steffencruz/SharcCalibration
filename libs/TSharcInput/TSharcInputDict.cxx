//
// File generated by rootcint at Fri Dec 12 14:44:00 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TSharcInputDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TSharcInputDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSharcInput_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSharcInput(void *p = 0);
   static void *newArray_TSharcInput(Long_t size, void *p);
   static void delete_TSharcInput(void *p);
   static void deleteArray_TSharcInput(void *p);
   static void destruct_TSharcInput(void *p);
   static void streamer_TSharcInput(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSharcInput*)
   {
      ::TSharcInput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSharcInput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSharcInput", ::TSharcInput::Class_Version(), "/home/bender/Programs/SharcCalibration/include/TSharcInput.h", 20,
                  typeid(::TSharcInput), DefineBehavior(ptr, ptr),
                  &::TSharcInput::Dictionary, isa_proxy, 1,
                  sizeof(::TSharcInput) );
      instance.SetNew(&new_TSharcInput);
      instance.SetNewArray(&newArray_TSharcInput);
      instance.SetDelete(&delete_TSharcInput);
      instance.SetDeleteArray(&deleteArray_TSharcInput);
      instance.SetDestructor(&destruct_TSharcInput);
      instance.SetStreamerFunc(&streamer_TSharcInput);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSharcInput*)
   {
      return GenerateInitInstanceLocal((::TSharcInput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSharcInput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr TSharcInput::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSharcInput::Class_Name()
{
   return "TSharcInput";
}

//______________________________________________________________________________
const char *TSharcInput::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSharcInput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSharcInput::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSharcInput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSharcInput::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSharcInput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSharcInput::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSharcInput*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TSharcInput::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSharcInput.
      TClass *R__cl = ::TSharcInput::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInfileName", (void*)&fInfileName);
      R__insp.InspectMember("string", (void*)&fInfileName, "fInfileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInfileData", (void*)&fInfileData);
      R__insp.InspectMember("string", (void*)&fInfileData, "fInfileData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunDeltaCal", &fRunDeltaCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcDeltaCal", &fSrcDeltaCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprotons", &fprotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fneutrons", &fneutrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "feperu", &feperu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fbeam", &fbeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fposoff", &fposoff);
      R__insp.InspectMember(fposoff, "fposoff.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftargthick", &ftargthick);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftargmat", (void*)&ftargmat);
      R__insp.InspectMember("string", (void*)&ftargmat, "ftargmat.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunIons", (void*)&fRunIons);
      R__insp.InspectMember("vector<std::string>", (void*)&fRunIons, "fRunIons.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcIons", (void*)&fSrcIons);
      R__insp.InspectMember("vector<std::string>", (void*)&fSrcIons, "fSrcIons.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcEnergies", (void*)&fSrcEnergies);
      R__insp.InspectMember("vector<double>", (void*)&fSrcEnergies, "fSrcEnergies.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frundatadir", (void*)&frundatadir);
      R__insp.InspectMember("string", (void*)&frundatadir, "frundatadir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsrcdatadir", (void*)&fsrcdatadir);
      R__insp.InspectMember("string", (void*)&fsrcdatadir, "fsrcdatadir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frundata", (void*)&frundata);
      R__insp.InspectMember("vector<std::string>", (void*)&frundata, "frundata.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsrcdata", (void*)&fsrcdata);
      R__insp.InspectMember("vector<std::string>", (void*)&fsrcdata, "fsrcdata.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcalfile", (void*)&fcalfile);
      R__insp.InspectMember("string", (void*)&fcalfile, "fcalfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frunchgmat", (void*)&frunchgmat);
      R__insp.InspectMember("string", (void*)&frunchgmat, "frunchgmat.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsrcchgmat", (void*)&fsrcchgmat);
      R__insp.InspectMember("string", (void*)&fsrcchgmat, "fsrcchgmat.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrontCharge_min", &fFrontCharge_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrontCharge_max", &fFrontCharge_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBackCharge_min", &fBackCharge_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBackCharge_max", &fBackCharge_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPadCharge_min", &fPadCharge_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPadCharge_max", &fPadCharge_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunChgSpecFitRange_min", &fRunChgSpecFitRange_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunChgSpecFitRange_max", &fRunChgSpecFitRange_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunChgSpecFitFunction", (void*)&fRunChgSpecFitFunction);
      R__insp.InspectMember("string", (void*)&fRunChgSpecFitFunction, "fRunChgSpecFitFunction.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunChgSpecResolution", &fRunChgSpecResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunChgSpecThreshold", &fRunChgSpecThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcChgSpecFitRange_min", &fSrcChgSpecFitRange_min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcChgSpecFitRange_max", &fSrcChgSpecFitRange_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcChgSpecFitFunction", (void*)&fSrcChgSpecFitFunction);
      R__insp.InspectMember("string", (void*)&fSrcChgSpecFitFunction, "fSrcChgSpecFitFunction.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcChgSpecResolution", &fSrcChgSpecResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSrcChgSpecThreshold", &fSrcChgSpecThreshold);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSharcInput(void *p) {
      return  p ? new(p) ::TSharcInput : new ::TSharcInput;
   }
   static void *newArray_TSharcInput(Long_t nElements, void *p) {
      return p ? new(p) ::TSharcInput[nElements] : new ::TSharcInput[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSharcInput(void *p) {
      delete ((::TSharcInput*)p);
   }
   static void deleteArray_TSharcInput(void *p) {
      delete [] ((::TSharcInput*)p);
   }
   static void destruct_TSharcInput(void *p) {
      typedef ::TSharcInput current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TSharcInput(TBuffer &buf, void *obj) {
      ((::TSharcInput*)obj)->::TSharcInput::Streamer(buf);
   }
} // end of namespace ROOT for class ::TSharcInput

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

/********************************************************
* TSharcInputDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTSharcInputDict();

extern "C" void G__set_cpp_environmentTSharcInputDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/bender/Programs/SharcCalibration/include/TSharcInput.h");
  G__cpp_reset_tagtableTSharcInputDict();
}
#include <new>
extern "C" int G__cpp_dllrevTSharcInputDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSharcInput */
static int G__TSharcInputDict_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSharcInput* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSharcInput[n];
     } else {
       p = new((void*) gvp) TSharcInput[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSharcInput;
     } else {
       p = new((void*) gvp) TSharcInput;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSharcInput::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSharcInput*) G__getstructoffset())->InitSharcInput((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSharcInput*) G__getstructoffset())->InitSharcInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSharcInput*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSharcInput*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetInfileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetInfileData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSharcInput*) G__getstructoffset())->GetRunDeltaCalFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSharcInput*) G__getstructoffset())->GetSrcDeltaCalFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSharcInput*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSharcInput*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSharcInput*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetTargetThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetBeamEperU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSharcInput*) G__getstructoffset())->GetBeamNucleus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetBeamSymbol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TSharcInput*) G__getstructoffset())->GetPosOffs();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetTargetMaterial());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetBeamEnergyMidTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TSharcInput*) G__getstructoffset())->GetRunKinematics((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TSharcInput*) G__getstructoffset())->GetRunKinematics((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetDataDir((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TSharcInput*) G__getstructoffset())->GetData((Option_t*) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TSharcInput*) G__getstructoffset())->GetIons((Option_t*) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetChgSpecFitRangeMin((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetChgSpecFitRangeMax((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetChgSpecResolution((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetChgSpecThreshold((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetChgSpecFitFunction((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSharcInput*) G__getstructoffset())->GetIonNumber((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TSharcInput*) G__getstructoffset())->GetEmeas((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Option_t*) G__int(libp->para[4]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetRunDataDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetSrcDataDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TSharcInput*) G__getstructoffset())->GetRunData();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TSharcInput*) G__getstructoffset())->GetSrcData();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TSharcInput*) G__getstructoffset())->GetRunIons();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TSharcInput*) G__getstructoffset())->GetSrcIons();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TSharcInput*) G__getstructoffset())->GetSrcEnergies();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetCalFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetRunChgSpecFitRangeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetRunChgSpecFitRangeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetRunChgSpecResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetRunChgSpecThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetRunChgSpecFitFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetSrcChgSpecFitRangeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetSrcChgSpecFitRangeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetSrcChgSpecResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetSrcChgSpecThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->GetSrcChgSpecFitFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetFrontChargeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetFrontChargeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetBackChargeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetBackChargeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetPadChargeMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSharcInput*) G__getstructoffset())->GetPadChargeMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TSharcInput*) G__getstructoffset())->MakeOutputName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSharcInput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcInput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSharcInput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSharcInput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcInput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcInput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSharcInput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcInput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcInputDict_223_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSharcInput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TSharcInputDict_223_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSharcInput* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSharcInput(*(TSharcInput*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSharcInput G__TTSharcInput;
static int G__TSharcInputDict_223_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSharcInput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSharcInput*) (soff+(sizeof(TSharcInput)*i)))->~G__TTSharcInput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSharcInput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSharcInput*) (soff))->~G__TTSharcInput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TSharcInputDict_223_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSharcInput* dest = (TSharcInput*) G__getstructoffset();
   *dest = *(TSharcInput*) libp->para[0].ref;
   const TSharcInput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSharcInput */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTSharcInputDict {
 public:
  G__Sizep2memfuncTSharcInputDict(): p(&G__Sizep2memfuncTSharcInputDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTSharcInputDict::*p)();
};

size_t G__get_sizep2memfuncTSharcInputDict()
{
  G__Sizep2memfuncTSharcInputDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTSharcInputDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput))) {
     TSharcInput *G__Lderived;
     G__Lderived=(TSharcInput*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput),G__get_linked_tagnum(&G__TSharcInputDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput),G__get_linked_tagnum(&G__TSharcInputDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTSharcInputDict() {

   /* Setting up typedef entry */
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSharcInput */
static void G__setup_memvarTSharcInput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput));
   { TSharcInput *p; p=(TSharcInput*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput),-1,-2,4,"fSharcInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fInfileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fInfileData=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRunDeltaCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSrcDeltaCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fprotons=",0,"beam proton number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fneutrons=",0,"beam neutron number");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"feperu=",0,"beam energy per u [MeV]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_TNucleus),-1,-1,4,"fbeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_TVector3),-1,-1,4,"fposoff=",0,"sharc position offset");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ftargthick=",0,"target thickness");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"ftargmat=",0,"target material");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"fRunIons=",0,"formatted name of run ions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"fSrcIons=",0,"formatted name of src ions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSrcEnergies=",0,"energy of src ions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"frundatadir=",0,"location of run data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fsrcdatadir=",0,"location of source data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"frundata=",0,"vector of strings containing datafile names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"fsrcdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fcalfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"frunchgmat=",0,"location of run data charge matrix (if available)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fsrcchgmat=",0,"location of source data charge matrix (if available)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFrontCharge_min=",0,"minimum front charge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFrontCharge_max=",0,"maximum front charge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBackCharge_min=",0,"\"\" back charge");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBackCharge_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPadCharge_min=",0,"\"\" pad charge/");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPadCharge_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRunChgSpecFitRange_min=",0,"range over which to fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRunChgSpecFitRange_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fRunChgSpecFitFunction=",0,"type of fit to do");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRunChgSpecResolution=",0,"resolution of peaks... maybe unnecessary");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRunChgSpecThreshold=",0,"for TSpectrum, threshold used for peak search");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSrcChgSpecFitRange_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSrcChgSpecFitRange_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_string),-1,-1,4,"fSrcChgSpecFitFunction=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSrcChgSpecResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSrcChgSpecThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcInputDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTSharcInputDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSharcInput(void) {
   /* TSharcInput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput));
   G__memfunc_setup("TSharcInput",1109,G__TSharcInputDict_223_0_1, 105, G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput), -1, 0, 0, 1, 1, 0, "", "default  constructor.", (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__TSharcInputDict_223_0_2, 85, G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TSharcInput* (*)())(&TSharcInput::Get) ), 0);
   G__memfunc_setup("InitSharcInput",1429,G__TSharcInputDict_223_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitSharcInput",1429,G__TSharcInputDict_223_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TSharcInputDict_223_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSharcInput",1109,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput), -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInput",1053,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trim",444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'string' - 0 - line u 'string' - 10 '\" \\f\\t\\n\\r\\v\"' trimchars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyInputFile",1323,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInputFile",1419,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckInput",1006,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunDeltaCalFlag",1749,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrcDeltaCalFlag",1736,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - 'Bool_t' 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 1 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetN",378,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - 'UInt_t' 1 - N", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamEperU",1154,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - EperU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosOffs",1004,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y "
"d - 'Double_t' 1 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetThickness",1855,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - tt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetMaterial",1730,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunDataDir",1274,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrcDataDir",1261,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRunData",952,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSrcData",939,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRunIon",868,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSrcIon",855,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSrcEnergy",1179,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalFile",956,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunChgSpecFunction",2116,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunChgSpecResolution",2354,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunChgSpecThreshold",2219,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunChgSpecFitRange",2062,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - chgmin d - 'Double_t' 0 - chgmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrcChgSpecFunction",2103,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrcChgSpecFitRange",2049,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - chgmin d - 'Double_t' 0 - chgmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrcChgSpecResolution",2341,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSrcChgSpecThreshold",2206,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 1 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrontChargeMinMax",1993,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - chgmin d - 'Double_t' 0 - chgmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackChargeMinMax",1841,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - chgmin d - 'Double_t' 0 - chgmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadChargeMinMax",1749,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"d - 'Double_t' 0 - chgmin d - 'Double_t' 0 - chgmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInfileName",1272,G__TSharcInputDict_223_0_40, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInfileData",1265,G__TSharcInputDict_223_0_41, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunDeltaCalFlag",1737,G__TSharcInputDict_223_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcDeltaCalFlag",1724,G__TSharcInputDict_223_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__TSharcInputDict_223_0_44, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__TSharcInputDict_223_0_45, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__TSharcInputDict_223_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetThickness",1843,G__TSharcInputDict_223_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamEperU",1142,G__TSharcInputDict_223_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamNucleus",1396,G__TSharcInputDict_223_0_49, 85, G__get_linked_tagnum(&G__TSharcInputDictLN_TNucleus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamSymbol",1291,G__TSharcInputDict_223_0_50, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosOffs",992,G__TSharcInputDict_223_0_51, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetMaterial",1718,G__TSharcInputDict_223_0_52, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamEnergyMidTarget",2176,G__TSharcInputDict_223_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunKinematics",1629,G__TSharcInputDict_223_0_54, 85, G__get_linked_tagnum(&G__TSharcInputDictLN_TKinematics), -1, 0, 2, 1, 1, 0, 
"C - - 10 - ion C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataDir",953,G__TSharcInputDict_223_0_55, 67, -1, -1, 0, 1, 1, 1, 1, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__TSharcInputDict_223_0_56, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIons",697,G__TSharcInputDict_223_0_57, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChgSpecFitRangeMin",2033,G__TSharcInputDict_223_0_58, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChgSpecFitRangeMax",2035,G__TSharcInputDict_223_0_59, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChgSpecResolution",2033,G__TSharcInputDict_223_0_60, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChgSpecThreshold",1898,G__TSharcInputDict_223_0_61, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChgSpecFitFunction",2086,G__TSharcInputDict_223_0_62, 67, -1, -1, 0, 1, 1, 1, 1, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIonNumber",1199,G__TSharcInputDict_223_0_63, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"C - - 10 - ion C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmeas",779,G__TSharcInputDict_223_0_64, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - DET h - 'UInt_t' 0 - FS "
"h - 'UInt_t' 0 - BS C - - 10 - ion "
"C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunDataDir",1262,G__TSharcInputDict_223_0_65, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcDataDir",1249,G__TSharcInputDict_223_0_66, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunData",975,G__TSharcInputDict_223_0_67, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcData",962,G__TSharcInputDict_223_0_68, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunIons",1006,G__TSharcInputDict_223_0_69, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcIons",993,G__TSharcInputDict_223_0_70, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcEnergies",1402,G__TSharcInputDict_223_0_71, 117, G__get_linked_tagnum(&G__TSharcInputDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalFile",944,G__TSharcInputDict_223_0_72, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunChgSpecFitRangeMin",2342,G__TSharcInputDict_223_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunChgSpecFitRangeMax",2344,G__TSharcInputDict_223_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunChgSpecResolution",2342,G__TSharcInputDict_223_0_75, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunChgSpecThreshold",2207,G__TSharcInputDict_223_0_76, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunChgSpecFitFunction",2395,G__TSharcInputDict_223_0_77, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcChgSpecFitRangeMin",2329,G__TSharcInputDict_223_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcChgSpecFitRangeMax",2331,G__TSharcInputDict_223_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcChgSpecResolution",2329,G__TSharcInputDict_223_0_80, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcChgSpecThreshold",2194,G__TSharcInputDict_223_0_81, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSrcChgSpecFitFunction",2382,G__TSharcInputDict_223_0_82, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrontChargeMin",1687,G__TSharcInputDict_223_0_83, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrontChargeMax",1689,G__TSharcInputDict_223_0_84, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackChargeMin",1535,G__TSharcInputDict_223_0_85, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackChargeMax",1537,G__TSharcInputDict_223_0_86, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadChargeMin",1443,G__TSharcInputDict_223_0_87, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadChargeMax",1445,G__TSharcInputDict_223_0_88, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeOutputName",1424,G__TSharcInputDict_223_0_89, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TSharcInputDict_223_0_90, 85, G__get_linked_tagnum(&G__TSharcInputDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSharcInput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TSharcInputDict_223_0_91, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcInput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TSharcInputDict_223_0_92, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSharcInput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TSharcInputDict_223_0_93, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSharcInput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TSharcInputDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TSharcInputDict_223_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TSharcInputDict_223_0_98, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcInput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TSharcInputDict_223_0_99, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSharcInput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TSharcInputDict_223_0_100, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcInput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TSharcInputDict_223_0_101, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSharcInput::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSharcInput", 1109, G__TSharcInputDict_223_0_102, (int) ('i'), G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput), -1, 0, 1, 1, 1, 0, "u 'TSharcInput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSharcInput", 1235, G__TSharcInputDict_223_0_103, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TSharcInputDict_223_0_104, (int) ('u'), G__get_linked_tagnum(&G__TSharcInputDictLN_TSharcInput), -1, 1, 1, 1, 1, 0, "u 'TSharcInput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTSharcInputDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTSharcInputDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTSharcInputDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TSharcInputDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TNucleus = { "TNucleus" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TKinematics = { "TKinematics" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_TSharcInput = { "TSharcInput" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TSharcInputDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTSharcInputDict() {
  G__TSharcInputDictLN_TClass.tagnum = -1 ;
  G__TSharcInputDictLN_TBuffer.tagnum = -1 ;
  G__TSharcInputDictLN_TMemberInspector.tagnum = -1 ;
  G__TSharcInputDictLN_TObject.tagnum = -1 ;
  G__TSharcInputDictLN_TNamed.tagnum = -1 ;
  G__TSharcInputDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__TSharcInputDictLN_string.tagnum = -1 ;
  G__TSharcInputDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TSharcInputDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcInputDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TSharcInputDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TSharcInputDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TSharcInputDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TSharcInputDictLN_TVector3.tagnum = -1 ;
  G__TSharcInputDictLN_TNucleus.tagnum = -1 ;
  G__TSharcInputDictLN_TKinematics.tagnum = -1 ;
  G__TSharcInputDictLN_TSharcInput.tagnum = -1 ;
  G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TSharcInputDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTSharcInputDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_string);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TNucleus);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TKinematics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_TSharcInput),sizeof(TSharcInput),-1,128256,(char*)NULL,G__setup_memvarTSharcInput,G__setup_memfuncTSharcInput);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcInputDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTSharcInputDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTSharcInputDict()");
  G__set_cpp_environmentTSharcInputDict();
  G__cpp_setup_tagtableTSharcInputDict();

  G__cpp_setup_inheritanceTSharcInputDict();

  G__cpp_setup_typetableTSharcInputDict();

  G__cpp_setup_memvarTSharcInputDict();

  G__cpp_setup_memfuncTSharcInputDict();
  G__cpp_setup_globalTSharcInputDict();
  G__cpp_setup_funcTSharcInputDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTSharcInputDict();
  return;
}
class G__cpp_setup_initTSharcInputDict {
  public:
    G__cpp_setup_initTSharcInputDict() { G__add_setup_func("TSharcInputDict",(G__incsetup)(&G__cpp_setupTSharcInputDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTSharcInputDict() { G__remove_setup_func("TSharcInputDict"); }
};
G__cpp_setup_initTSharcInputDict G__cpp_setup_initializerTSharcInputDict;

