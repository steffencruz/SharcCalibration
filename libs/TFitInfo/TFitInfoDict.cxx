//
// File generated by rootcint at Wed Dec  3 19:10:24 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TFitInfoDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TFitInfoDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TFitInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFitInfo(void *p = 0);
   static void *newArray_TFitInfo(Long_t size, void *p);
   static void delete_TFitInfo(void *p);
   static void deleteArray_TFitInfo(void *p);
   static void destruct_TFitInfo(void *p);
   static void streamer_TFitInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFitInfo*)
   {
      ::TFitInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFitInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFitInfo", ::TFitInfo::Class_Version(), "/home/tiguser/packages/SharcCalibration/include/TFitInfo.h", 10,
                  typeid(::TFitInfo), DefineBehavior(ptr, ptr),
                  &::TFitInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TFitInfo) );
      instance.SetNew(&new_TFitInfo);
      instance.SetNewArray(&newArray_TFitInfo);
      instance.SetDelete(&delete_TFitInfo);
      instance.SetDeleteArray(&deleteArray_TFitInfo);
      instance.SetDestructor(&destruct_TFitInfo);
      instance.SetStreamerFunc(&streamer_TFitInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFitInfo*)
   {
      return GenerateInitInstanceLocal((::TFitInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFitInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr TFitInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFitInfo::Class_Name()
{
   return "TFitInfo";
}

//______________________________________________________________________________
const char *TFitInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFitInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFitInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFitInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFitInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFitInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFitInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFitInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TFitInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFitInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fgood;
      ffunction.Streamer(R__b);
      {
         vector<Double_t> &R__stl =  fxvalues;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fyvalues;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TFitInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(TFitInfo::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fgood;
      ffunction.Streamer(R__b);
      {
         vector<Double_t> &R__stl =  fxvalues;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fyvalues;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TFitInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFitInfo.
      TClass *R__cl = ::TFitInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgood", &fgood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffunction", &ffunction);
      R__insp.InspectMember(ffunction, "ffunction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fxvalues", (void*)&fxvalues);
      R__insp.InspectMember("vector<Double_t>", (void*)&fxvalues, "fxvalues.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fyvalues", (void*)&fyvalues);
      R__insp.InspectMember("vector<Double_t>", (void*)&fyvalues, "fyvalues.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFitInfo(void *p) {
      return  p ? new(p) ::TFitInfo : new ::TFitInfo;
   }
   static void *newArray_TFitInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TFitInfo[nElements] : new ::TFitInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFitInfo(void *p) {
      delete ((::TFitInfo*)p);
   }
   static void deleteArray_TFitInfo(void *p) {
      delete [] ((::TFitInfo*)p);
   }
   static void destruct_TFitInfo(void *p) {
      typedef ::TFitInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TFitInfo(TBuffer &buf, void *obj) {
      ((::TFitInfo*)obj)->::TFitInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::TFitInfo

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* TFitInfoDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTFitInfoDict();

extern "C" void G__set_cpp_environmentTFitInfoDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/tiguser/packages/SharcCalibration/include/TFitInfo.h");
  G__cpp_reset_tagtableTFitInfoDict();
}
#include <new>
extern "C" int G__cpp_dllrevTFitInfoDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TFitInfo */
static int G__TFitInfoDict_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFitInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFitInfo[n];
     } else {
       p = new((void*) gvp) TFitInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFitInfo;
     } else {
       p = new((void*) gvp) TFitInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFitInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFitInfo(
(TF1*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TFitInfo(
(TF1*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFitInfo(
(TF1*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TFitInfo(
(TF1*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFitInfo*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFitInfo*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TFitInfo*) G__getstructoffset())->GetNParm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitInfo*) G__getstructoffset())->SetX(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitInfo*) G__getstructoffset())->SetY(*(Double_t*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitInfo*) G__getstructoffset())->SetXY(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TFitInfo*) G__getstructoffset())->GetX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TFitInfo*) G__getstructoffset())->GetY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFitInfo*) G__getstructoffset())->SetInfoName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFitInfo*) G__getstructoffset())->SetInfoName();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitInfo*) G__getstructoffset())->SetStatus((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TFitInfo*) G__getstructoffset())->Status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitInfo*) G__getstructoffset())->SetFunction((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TFitInfo*) G__getstructoffset())->GetFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFitInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFitInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFitInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFitInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFitInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFitInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFitInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFitInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFitInfoDict_213_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFitInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFitInfo G__TTFitInfo;
static int G__TFitInfoDict_213_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFitInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFitInfo*) (soff+(sizeof(TFitInfo)*i)))->~G__TTFitInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFitInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFitInfo*) (soff))->~G__TTFitInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TFitInfo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTFitInfoDict {
 public:
  G__Sizep2memfuncTFitInfoDict(): p(&G__Sizep2memfuncTFitInfoDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTFitInfoDict::*p)();
};

size_t G__get_sizep2memfuncTFitInfoDict()
{
  G__Sizep2memfuncTFitInfoDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTFitInfoDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo))) {
     TFitInfo *G__Lderived;
     G__Lderived=(TFitInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo),G__get_linked_tagnum(&G__TFitInfoDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo),G__get_linked_tagnum(&G__TFitInfoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTFitInfoDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TFitInfo */
static void G__setup_memvarTFitInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo));
   { TFitInfo *p; p=(TFitInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fgood=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TFitInfoDictLN_TF1),-1,-1,4,"ffunction=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fxvalues=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TFitInfoDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fyvalues=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TFitInfoDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTFitInfoDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTFitInfo(void) {
   /* TFitInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo));
   G__memfunc_setup("TFitInfo",771,G__TFitInfoDict_213_0_1, 105, G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFitInfo",771,G__TFitInfoDict_213_0_2, 105, G__get_linked_tagnum(&G__TFitInfoDictLN_TFitInfo), -1, 0, 5, 1, 1, 0, 
"U 'TF1' - 0 - func D - 'Double_t' 0 - xvals "
"D - 'Double_t' 0 - yvals h - 'UInt_t' 0 - npeaks "
"g - 'Bool_t' 0 'true' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__TFitInfoDict_213_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParm",766,G__TFitInfoDict_213_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__TFitInfoDict_213_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 1 - xvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__TFitInfoDict_213_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 1 - yvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXY",477,G__TFitInfoDict_213_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - xvalue d - 'Double_t' 1 - yvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__TFitInfoDict_213_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__TFitInfoDict_213_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInfoName",1081,G__TFitInfoDict_213_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' infoname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__TFitInfoDict_213_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Status",644,G__TFitInfoDict_213_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunction",1138,G__TFitInfoDict_213_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - func", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunction",1126,G__TFitInfoDict_213_0_15, 85, G__get_linked_tagnum(&G__TFitInfoDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TFitInfoDict_213_0_16, 85, G__get_linked_tagnum(&G__TFitInfoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFitInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TFitInfoDict_213_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFitInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TFitInfoDict_213_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFitInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TFitInfoDict_213_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFitInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TFitInfoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TFitInfoDict_213_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TFitInfoDict_213_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFitInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TFitInfoDict_213_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFitInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TFitInfoDict_213_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFitInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TFitInfoDict_213_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFitInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFitInfo", 897, G__TFitInfoDict_213_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTFitInfoDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTFitInfoDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTFitInfoDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TFitInfoDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TFitInfoDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__TFitInfoDictLN_TFitInfo = { "TFitInfo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTFitInfoDict() {
  G__TFitInfoDictLN_TClass.tagnum = -1 ;
  G__TFitInfoDictLN_TBuffer.tagnum = -1 ;
  G__TFitInfoDictLN_TMemberInspector.tagnum = -1 ;
  G__TFitInfoDictLN_TObject.tagnum = -1 ;
  G__TFitInfoDictLN_TNamed.tagnum = -1 ;
  G__TFitInfoDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__TFitInfoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TFitInfoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFitInfoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TFitInfoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TFitInfoDictLN_TF1.tagnum = -1 ;
  G__TFitInfoDictLN_TFitInfo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTFitInfoDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TFitInfoDictLN_TFitInfo),sizeof(TFitInfo),-1,62720,(char*)NULL,G__setup_memvarTFitInfo,G__setup_memfuncTFitInfo);
}
extern "C" void G__cpp_setupTFitInfoDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTFitInfoDict()");
  G__set_cpp_environmentTFitInfoDict();
  G__cpp_setup_tagtableTFitInfoDict();

  G__cpp_setup_inheritanceTFitInfoDict();

  G__cpp_setup_typetableTFitInfoDict();

  G__cpp_setup_memvarTFitInfoDict();

  G__cpp_setup_memfuncTFitInfoDict();
  G__cpp_setup_globalTFitInfoDict();
  G__cpp_setup_funcTFitInfoDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTFitInfoDict();
  return;
}
class G__cpp_setup_initTFitInfoDict {
  public:
    G__cpp_setup_initTFitInfoDict() { G__add_setup_func("TFitInfoDict",(G__incsetup)(&G__cpp_setupTFitInfoDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTFitInfoDict() { G__remove_setup_func("TFitInfoDict"); }
};
G__cpp_setup_initTFitInfoDict G__cpp_setup_initializerTFitInfoDict;

