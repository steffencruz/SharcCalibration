//
// File generated by rootcint at Fri Dec 12 15:49:04 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TFileManagerDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TFileManagerDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TFileManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFileManager(void *p = 0);
   static void *newArray_TFileManager(Long_t size, void *p);
   static void delete_TFileManager(void *p);
   static void deleteArray_TFileManager(void *p);
   static void destruct_TFileManager(void *p);
   static void streamer_TFileManager(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFileManager*)
   {
      ::TFileManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFileManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFileManager", ::TFileManager::Class_Version(), "/home/bender/Programs/SharcCalibration/include/TFileManager.h", 13,
                  typeid(::TFileManager), DefineBehavior(ptr, ptr),
                  &::TFileManager::Dictionary, isa_proxy, 0,
                  sizeof(::TFileManager) );
      instance.SetNew(&new_TFileManager);
      instance.SetNewArray(&newArray_TFileManager);
      instance.SetDelete(&delete_TFileManager);
      instance.SetDeleteArray(&deleteArray_TFileManager);
      instance.SetDestructor(&destruct_TFileManager);
      instance.SetStreamerFunc(&streamer_TFileManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFileManager*)
   {
      return GenerateInitInstanceLocal((::TFileManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFileManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr TFileManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TFileManager::Class_Name()
{
   return "TFileManager";
}

//______________________________________________________________________________
const char *TFileManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFileManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFileManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFileManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFileManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFileManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFileManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFileManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TFileManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFileManager.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TFileManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFileManager.
      TClass *R__cl = ::TFileManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFileManager(void *p) {
      return  p ? new(p) ::TFileManager : new ::TFileManager;
   }
   static void *newArray_TFileManager(Long_t nElements, void *p) {
      return p ? new(p) ::TFileManager[nElements] : new ::TFileManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFileManager(void *p) {
      delete ((::TFileManager*)p);
   }
   static void deleteArray_TFileManager(void *p) {
      delete [] ((::TFileManager*)p);
   }
   static void destruct_TFileManager(void *p) {
      typedef ::TFileManager current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TFileManager(TBuffer &buf, void *obj) {
      ((::TFileManager*)obj)->::TFileManager::Streamer(buf);
   }
} // end of namespace ROOT for class ::TFileManager

/********************************************************
* TFileManagerDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTFileManagerDict();

extern "C" void G__set_cpp_environmentTFileManagerDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/bender/Programs/SharcCalibration/include/TFileManager.h");
  G__cpp_reset_tagtableTFileManagerDict();
}
#include <new>
extern "C" int G__cpp_dllrevTFileManagerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TFileManager */
static int G__TFileManagerDict_304_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileManager[n];
     } else {
       p = new((void*) gvp) TFileManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileManager;
     } else {
       p = new((void*) gvp) TFileManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFileManager*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFileManager*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) TFileManager::ReadFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) TFileManager::ReadFile((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) TFileManager::ReadFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TFileManager::WriteFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TFileManager::WriteFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TFileManager::WriteFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFileManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFileManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFileManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFileManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFileManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFileManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFileManagerDict_304_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFileManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TFileManagerDict_304_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFileManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFileManager(*(TFileManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFileManager G__TTFileManager;
static int G__TFileManagerDict_304_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFileManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFileManager*) (soff+(sizeof(TFileManager)*i)))->~G__TTFileManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFileManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFileManager*) (soff))->~G__TTFileManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TFileManagerDict_304_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileManager* dest = (TFileManager*) G__getstructoffset();
   *dest = *(TFileManager*) libp->para[0].ref;
   const TFileManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TFileManager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTFileManagerDict {
 public:
  G__Sizep2memfuncTFileManagerDict(): p(&G__Sizep2memfuncTFileManagerDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTFileManagerDict::*p)();
};

size_t G__get_sizep2memfuncTFileManagerDict()
{
  G__Sizep2memfuncTFileManagerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTFileManagerDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager))) {
     TFileManager *G__Lderived;
     G__Lderived=(TFileManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager),G__get_linked_tagnum(&G__TFileManagerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTFileManagerDict() {

   /* Setting up typedef entry */
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TFileManager */
static void G__setup_memvarTFileManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager));
   { TFileManager *p; p=(TFileManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TFileManagerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTFileManagerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTFileManager(void) {
   /* TFileManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager));
   G__memfunc_setup("TFileManager",1167,G__TFileManagerDict_304_0_1, 105, G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TFileManagerDict_304_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadFile",764,G__TFileManagerDict_304_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"C - - 10 '0' fname C - 'Option_t' 10 '\"READ\"' opt", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*, Option_t*))(&TFileManager::ReadFile) ), 0);
   G__memfunc_setup("WriteFile",907,G__TFileManagerDict_304_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 '0' fname C - 'Option_t' 10 '\"RECREATE\"' opt", (char*)NULL, (void*) G__func2void( (void (*)(const char*, Option_t*))(&TFileManager::WriteFile) ), 0);
   G__memfunc_setup("ReadKeys",792,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "U 'TDirectoryFile' - 0 - currentdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadList",792,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 3, 4, 0, 
"U 'TList' - 0 - list C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteList",935,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 4, 0, 
"u 'TFile' - 1 - file U 'TList' - 0 - list "
"C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TFileManagerDict_304_0_9, 85, G__get_linked_tagnum(&G__TFileManagerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFileManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TFileManagerDict_304_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TFileManagerDict_304_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFileManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TFileManagerDict_304_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFileManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TFileManagerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TFileManagerDict_304_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TFileManagerDict_304_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TFileManagerDict_304_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFileManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TFileManagerDict_304_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFileManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TFileManagerDict_304_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFileManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFileManager", 1167, G__TFileManagerDict_304_0_21, (int) ('i'), G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager), -1, 0, 1, 1, 1, 0, "u 'TFileManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFileManager", 1293, G__TFileManagerDict_304_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TFileManagerDict_304_0_23, (int) ('u'), G__get_linked_tagnum(&G__TFileManagerDictLN_TFileManager), -1, 1, 1, 1, 1, 0, "u 'TFileManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTFileManagerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTFileManagerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTFileManagerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TFileManagerDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TDirectoryFile = { "TDirectoryFile" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFileManagerDictLN_TFileManager = { "TFileManager" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTFileManagerDict() {
  G__TFileManagerDictLN_TClass.tagnum = -1 ;
  G__TFileManagerDictLN_TBuffer.tagnum = -1 ;
  G__TFileManagerDictLN_TMemberInspector.tagnum = -1 ;
  G__TFileManagerDictLN_TObject.tagnum = -1 ;
  G__TFileManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TFileManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFileManagerDictLN_TList.tagnum = -1 ;
  G__TFileManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TFileManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TFileManagerDictLN_TFile.tagnum = -1 ;
  G__TFileManagerDictLN_TDirectoryFile.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TFileManagerDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TFileManagerDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TFileManagerDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFileManagerDictLN_TFileManager.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTFileManagerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TList);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TDirectoryFile);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TFileManagerDictLN_TFileManager),sizeof(TFileManager),-1,29952,(char*)NULL,G__setup_memvarTFileManager,G__setup_memfuncTFileManager);
}
extern "C" void G__cpp_setupTFileManagerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTFileManagerDict()");
  G__set_cpp_environmentTFileManagerDict();
  G__cpp_setup_tagtableTFileManagerDict();

  G__cpp_setup_inheritanceTFileManagerDict();

  G__cpp_setup_typetableTFileManagerDict();

  G__cpp_setup_memvarTFileManagerDict();

  G__cpp_setup_memfuncTFileManagerDict();
  G__cpp_setup_globalTFileManagerDict();
  G__cpp_setup_funcTFileManagerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTFileManagerDict();
  return;
}
class G__cpp_setup_initTFileManagerDict {
  public:
    G__cpp_setup_initTFileManagerDict() { G__add_setup_func("TFileManagerDict",(G__incsetup)(&G__cpp_setupTFileManagerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTFileManagerDict() { G__remove_setup_func("TFileManagerDict"); }
};
G__cpp_setup_initTFileManagerDict G__cpp_setup_initializerTFileManagerDict;

